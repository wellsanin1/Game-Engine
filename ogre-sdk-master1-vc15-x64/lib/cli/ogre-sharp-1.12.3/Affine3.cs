//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace org.ogre {

public class Affine3 : TransformBaseReal {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal Affine3(global::System.IntPtr cPtr, bool cMemoryOwn) : base(OgrePINVOKE.Affine3_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Affine3 obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Affine3() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OgrePINVOKE.delete_Affine3(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public Affine3() : this(OgrePINVOKE.new_Affine3__SWIG_0(), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public Affine3(Vector3 position, Quaternion orientation, Vector3 scale) : this(OgrePINVOKE.new_Affine3__SWIG_1(Vector3.getCPtr(position), Quaternion.getCPtr(orientation), Vector3.getCPtr(scale)), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public Affine3(Vector3 position, Quaternion orientation) : this(OgrePINVOKE.new_Affine3__SWIG_2(Vector3.getCPtr(position), Quaternion.getCPtr(orientation)), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public Affine3(SWIGTYPE_p_float arr) : this(OgrePINVOKE.new_Affine3__SWIG_3(SWIGTYPE_p_float.getCPtr(arr)), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public Affine3(float m00, float m01, float m02, float m03, float m10, float m11, float m12, float m13, float m20, float m21, float m22, float m23) : this(OgrePINVOKE.new_Affine3__SWIG_4(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public Affine3(Matrix4 mat) : this(OgrePINVOKE.new_Affine3__SWIG_5(Matrix4.getCPtr(mat)), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public Affine3 inverse() {
    Affine3 ret = new Affine3(OgrePINVOKE.Affine3_inverse(swigCPtr), true);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void decomposition(Vector3 position, Vector3 scale, Quaternion orientation) {
    OgrePINVOKE.Affine3_decomposition(swigCPtr, Vector3.getCPtr(position), Vector3.getCPtr(scale), Quaternion.getCPtr(orientation));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public static Affine3 getTrans(Vector3 v) {
    Affine3 ret = new Affine3(OgrePINVOKE.Affine3_getTrans__SWIG_1(Vector3.getCPtr(v)), true);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Affine3 getTrans(float t_x, float t_y, float t_z) {
    Affine3 ret = new Affine3(OgrePINVOKE.Affine3_getTrans__SWIG_2(t_x, t_y, t_z), true);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Affine3 getScale(Vector3 v) {
    Affine3 ret = new Affine3(OgrePINVOKE.Affine3_getScale__SWIG_0(Vector3.getCPtr(v)), true);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Affine3 getScale(float s_x, float s_y, float s_z) {
    Affine3 ret = new Affine3(OgrePINVOKE.Affine3_getScale__SWIG_1(s_x, s_y, s_z), true);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Affine3 ZERO {
    get {
      global::System.IntPtr cPtr = OgrePINVOKE.Affine3_ZERO_get();
      Affine3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new Affine3(cPtr, false);
      if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public static Affine3 IDENTITY {
    get {
      global::System.IntPtr cPtr = OgrePINVOKE.Affine3_IDENTITY_get();
      Affine3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new Affine3(cPtr, false);
      if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public override string ToString() {
    string ret = OgrePINVOKE.Affine3_ToString(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
