//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace org.ogre {

public class ApplicationContext : ApplicationContextBase {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal ApplicationContext(global::System.IntPtr cPtr, bool cMemoryOwn) : base(BitesPINVOKE.ApplicationContext_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ApplicationContext obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ApplicationContext() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BitesPINVOKE.delete_ApplicationContext(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public ApplicationContext(string appName) : this(BitesPINVOKE.new_ApplicationContext__SWIG_0(appName), true) {
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
    SwigDirectorConnect();
  }

  public ApplicationContext() : this(BitesPINVOKE.new_ApplicationContext__SWIG_1(), true) {
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
    SwigDirectorConnect();
  }

  public override void setWindowGrab(SWIGTYPE_p_SDL_Window win, bool grab) {
    if (SwigDerivedClassHasMethod("setWindowGrab", swigMethodTypes11)) BitesPINVOKE.ApplicationContext_setWindowGrabSwigExplicitApplicationContext__SWIG_0(swigCPtr, SWIGTYPE_p_SDL_Window.getCPtr(win), grab); else BitesPINVOKE.ApplicationContext_setWindowGrab__SWIG_0(swigCPtr, SWIGTYPE_p_SDL_Window.getCPtr(win), grab);
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void shutdown() {
    if (SwigDerivedClassHasMethod("shutdown", swigMethodTypes16)) BitesPINVOKE.ApplicationContext_shutdownSwigExplicitApplicationContext(swigCPtr); else BitesPINVOKE.ApplicationContext_shutdown(swigCPtr);
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void pollEvents() {
    if (SwigDerivedClassHasMethod("pollEvents", swigMethodTypes17)) BitesPINVOKE.ApplicationContext_pollEventsSwigExplicitApplicationContext(swigCPtr); else BitesPINVOKE.ApplicationContext_pollEvents(swigCPtr);
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void addInputListener(SWIGTYPE_p_SDL_Window win, InputListener lis) {
    if (SwigDerivedClassHasMethod("addInputListener", swigMethodTypes18)) BitesPINVOKE.ApplicationContext_addInputListenerSwigExplicitApplicationContext__SWIG_0(swigCPtr, SWIGTYPE_p_SDL_Window.getCPtr(win), InputListener.getCPtr(lis)); else BitesPINVOKE.ApplicationContext_addInputListener__SWIG_0(swigCPtr, SWIGTYPE_p_SDL_Window.getCPtr(win), InputListener.getCPtr(lis));
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void removeInputListener(SWIGTYPE_p_SDL_Window win, InputListener lis) {
    if (SwigDerivedClassHasMethod("removeInputListener", swigMethodTypes19)) BitesPINVOKE.ApplicationContext_removeInputListenerSwigExplicitApplicationContext__SWIG_0(swigCPtr, SWIGTYPE_p_SDL_Window.getCPtr(win), InputListener.getCPtr(lis)); else BitesPINVOKE.ApplicationContext_removeInputListener__SWIG_0(swigCPtr, SWIGTYPE_p_SDL_Window.getCPtr(win), InputListener.getCPtr(lis));
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
  }

  public override NativeWindowPair createWindow(string name, uint w, uint h, NameValuePairList miscParams) {
    NativeWindowPair ret = new NativeWindowPair((SwigDerivedClassHasMethod("createWindow", swigMethodTypes20) ? BitesPINVOKE.ApplicationContext_createWindowSwigExplicitApplicationContext__SWIG_0(swigCPtr, name, w, h, NameValuePairList.getCPtr(miscParams)) : BitesPINVOKE.ApplicationContext_createWindow__SWIG_0(swigCPtr, name, w, h, NameValuePairList.getCPtr(miscParams))), true);
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override NativeWindowPair createWindow(string name, uint w, uint h) {
    NativeWindowPair ret = new NativeWindowPair((SwigDerivedClassHasMethod("createWindow", swigMethodTypes21) ? BitesPINVOKE.ApplicationContext_createWindowSwigExplicitApplicationContext__SWIG_1(swigCPtr, name, w, h) : BitesPINVOKE.ApplicationContext_createWindow__SWIG_1(swigCPtr, name, w, h)), true);
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override NativeWindowPair createWindow(string name, uint w) {
    NativeWindowPair ret = new NativeWindowPair((SwigDerivedClassHasMethod("createWindow", swigMethodTypes22) ? BitesPINVOKE.ApplicationContext_createWindowSwigExplicitApplicationContext__SWIG_2(swigCPtr, name, w) : BitesPINVOKE.ApplicationContext_createWindow__SWIG_2(swigCPtr, name, w)), true);
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override NativeWindowPair createWindow(string name) {
    NativeWindowPair ret = new NativeWindowPair((SwigDerivedClassHasMethod("createWindow", swigMethodTypes23) ? BitesPINVOKE.ApplicationContext_createWindowSwigExplicitApplicationContext__SWIG_3(swigCPtr, name) : BitesPINVOKE.ApplicationContext_createWindow__SWIG_3(swigCPtr, name)), true);
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override void setWindowGrab(SWIGTYPE_p_SDL_Window win) {
    if (SwigDerivedClassHasMethod("setWindowGrab", swigMethodTypes12)) BitesPINVOKE.ApplicationContext_setWindowGrabSwigExplicitApplicationContext__SWIG_1_0(swigCPtr, SWIGTYPE_p_SDL_Window.getCPtr(win)); else BitesPINVOKE.ApplicationContext_setWindowGrab__SWIG_1_0(swigCPtr, SWIGTYPE_p_SDL_Window.getCPtr(win));
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
  }

  public new void setWindowGrab(bool grab) {
    BitesPINVOKE.ApplicationContext_setWindowGrab__SWIG_1_1(swigCPtr, grab);
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
  }

  public new void setWindowGrab() {
    BitesPINVOKE.ApplicationContext_setWindowGrab__SWIG_1_2(swigCPtr);
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
  }

  public new void addInputListener(InputListener lis) {
    BitesPINVOKE.ApplicationContext_addInputListener__SWIG_1_0(swigCPtr, InputListener.getCPtr(lis));
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
  }

  public new void removeInputListener(InputListener lis) {
    BitesPINVOKE.ApplicationContext_removeInputListener__SWIG_1_0(swigCPtr, InputListener.getCPtr(lis));
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("frameStarted", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateApplicationContext_0(SwigDirectorframeStarted);
    if (SwigDerivedClassHasMethod("frameRenderingQueued", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateApplicationContext_1(SwigDirectorframeRenderingQueued);
    if (SwigDerivedClassHasMethod("frameEnded", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateApplicationContext_2(SwigDirectorframeEnded);
    if (SwigDerivedClassHasMethod("windowMoved", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateApplicationContext_3(SwigDirectorwindowMoved);
    if (SwigDerivedClassHasMethod("windowResized", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateApplicationContext_4(SwigDirectorwindowResized);
    if (SwigDerivedClassHasMethod("windowClosing", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateApplicationContext_5(SwigDirectorwindowClosing);
    if (SwigDerivedClassHasMethod("windowClosed", swigMethodTypes6))
      swigDelegate6 = new SwigDelegateApplicationContext_6(SwigDirectorwindowClosed);
    if (SwigDerivedClassHasMethod("windowFocusChange", swigMethodTypes7))
      swigDelegate7 = new SwigDelegateApplicationContext_7(SwigDirectorwindowFocusChange);
    if (SwigDerivedClassHasMethod("setup", swigMethodTypes8))
      swigDelegate8 = new SwigDelegateApplicationContext_8(SwigDirectorsetup);
    if (SwigDerivedClassHasMethod("createRoot", swigMethodTypes9))
      swigDelegate9 = new SwigDelegateApplicationContext_9(SwigDirectorcreateRoot);
    if (SwigDerivedClassHasMethod("oneTimeConfig", swigMethodTypes10))
      swigDelegate10 = new SwigDelegateApplicationContext_10(SwigDirectoroneTimeConfig);
    if (SwigDerivedClassHasMethod("setWindowGrab", swigMethodTypes11))
      swigDelegate11 = new SwigDelegateApplicationContext_11(SwigDirectorsetWindowGrab__SWIG_0);
    if (SwigDerivedClassHasMethod("setWindowGrab", swigMethodTypes12))
      swigDelegate12 = new SwigDelegateApplicationContext_12(SwigDirectorsetWindowGrab__SWIG_1_0);
    if (SwigDerivedClassHasMethod("locateResources", swigMethodTypes13))
      swigDelegate13 = new SwigDelegateApplicationContext_13(SwigDirectorlocateResources);
    if (SwigDerivedClassHasMethod("loadResources", swigMethodTypes14))
      swigDelegate14 = new SwigDelegateApplicationContext_14(SwigDirectorloadResources);
    if (SwigDerivedClassHasMethod("reconfigure", swigMethodTypes15))
      swigDelegate15 = new SwigDelegateApplicationContext_15(SwigDirectorreconfigure);
    if (SwigDerivedClassHasMethod("shutdown", swigMethodTypes16))
      swigDelegate16 = new SwigDelegateApplicationContext_16(SwigDirectorshutdown);
    if (SwigDerivedClassHasMethod("pollEvents", swigMethodTypes17))
      swigDelegate17 = new SwigDelegateApplicationContext_17(SwigDirectorpollEvents);
    if (SwigDerivedClassHasMethod("addInputListener", swigMethodTypes18))
      swigDelegate18 = new SwigDelegateApplicationContext_18(SwigDirectoraddInputListener__SWIG_0);
    if (SwigDerivedClassHasMethod("removeInputListener", swigMethodTypes19))
      swigDelegate19 = new SwigDelegateApplicationContext_19(SwigDirectorremoveInputListener__SWIG_0);
    if (SwigDerivedClassHasMethod("createWindow", swigMethodTypes20))
      swigDelegate20 = new SwigDelegateApplicationContext_20(SwigDirectorcreateWindow__SWIG_0);
    if (SwigDerivedClassHasMethod("createWindow", swigMethodTypes21))
      swigDelegate21 = new SwigDelegateApplicationContext_21(SwigDirectorcreateWindow__SWIG_1);
    if (SwigDerivedClassHasMethod("createWindow", swigMethodTypes22))
      swigDelegate22 = new SwigDelegateApplicationContext_22(SwigDirectorcreateWindow__SWIG_2);
    if (SwigDerivedClassHasMethod("createWindow", swigMethodTypes23))
      swigDelegate23 = new SwigDelegateApplicationContext_23(SwigDirectorcreateWindow__SWIG_3);
    BitesPINVOKE.ApplicationContext_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7, swigDelegate8, swigDelegate9, swigDelegate10, swigDelegate11, swigDelegate12, swigDelegate13, swigDelegate14, swigDelegate15, swigDelegate16, swigDelegate17, swigDelegate18, swigDelegate19, swigDelegate20, swigDelegate21, swigDelegate22, swigDelegate23);
  }

  private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
    global::System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(ApplicationContext));
    return hasDerivedMethod;
  }

  private bool SwigDirectorframeStarted(global::System.IntPtr evt) {
    return frameStarted(new FrameEvent(evt, false));
  }

  private bool SwigDirectorframeRenderingQueued(global::System.IntPtr evt) {
    return frameRenderingQueued(new FrameEvent(evt, false));
  }

  private bool SwigDirectorframeEnded(global::System.IntPtr evt) {
    return frameEnded(new FrameEvent(evt, false));
  }

  private void SwigDirectorwindowMoved(global::System.IntPtr rw) {
    windowMoved((rw == global::System.IntPtr.Zero) ? null : new RenderWindow(rw, false));
  }

  private void SwigDirectorwindowResized(global::System.IntPtr rw) {
    windowResized((rw == global::System.IntPtr.Zero) ? null : new RenderWindow(rw, false));
  }

  private bool SwigDirectorwindowClosing(global::System.IntPtr rw) {
    return windowClosing((rw == global::System.IntPtr.Zero) ? null : new RenderWindow(rw, false));
  }

  private void SwigDirectorwindowClosed(global::System.IntPtr rw) {
    windowClosed((rw == global::System.IntPtr.Zero) ? null : new RenderWindow(rw, false));
  }

  private void SwigDirectorwindowFocusChange(global::System.IntPtr rw) {
    windowFocusChange((rw == global::System.IntPtr.Zero) ? null : new RenderWindow(rw, false));
  }

  private void SwigDirectorsetup() {
    setup();
  }

  private void SwigDirectorcreateRoot() {
    createRoot();
  }

  private bool SwigDirectoroneTimeConfig() {
    return oneTimeConfig();
  }

  private void SwigDirectorsetWindowGrab__SWIG_0(global::System.IntPtr win, bool grab) {
    setWindowGrab((win == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_SDL_Window(win, false), grab);
  }

  private void SwigDirectorsetWindowGrab__SWIG_1_0(global::System.IntPtr win) {
    setWindowGrab((win == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_SDL_Window(win, false));
  }

  private void SwigDirectorlocateResources() {
    locateResources();
  }

  private void SwigDirectorloadResources() {
    loadResources();
  }

  private void SwigDirectorreconfigure(string renderer, global::System.IntPtr options) {
    reconfigure(renderer, new NameValuePairList(options, false));
  }

  private void SwigDirectorshutdown() {
    shutdown();
  }

  private void SwigDirectorpollEvents() {
    pollEvents();
  }

  private void SwigDirectoraddInputListener__SWIG_0(global::System.IntPtr win, global::System.IntPtr lis) {
    addInputListener((win == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_SDL_Window(win, false), (lis == global::System.IntPtr.Zero) ? null : new InputListener(lis, false));
  }

  private void SwigDirectorremoveInputListener__SWIG_0(global::System.IntPtr win, global::System.IntPtr lis) {
    removeInputListener((win == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_SDL_Window(win, false), (lis == global::System.IntPtr.Zero) ? null : new InputListener(lis, false));
  }

  private global::System.IntPtr SwigDirectorcreateWindow__SWIG_0(string name, uint w, uint h, global::System.IntPtr miscParams) {
    return NativeWindowPair.getCPtr(createWindow(name, w, h, new NameValuePairList(miscParams, true))).Handle;
  }

  private global::System.IntPtr SwigDirectorcreateWindow__SWIG_1(string name, uint w, uint h) {
    return NativeWindowPair.getCPtr(createWindow(name, w, h)).Handle;
  }

  private global::System.IntPtr SwigDirectorcreateWindow__SWIG_2(string name, uint w) {
    return NativeWindowPair.getCPtr(createWindow(name, w)).Handle;
  }

  private global::System.IntPtr SwigDirectorcreateWindow__SWIG_3(string name) {
    return NativeWindowPair.getCPtr(createWindow(name)).Handle;
  }

  public delegate bool SwigDelegateApplicationContext_0(global::System.IntPtr evt);
  public delegate bool SwigDelegateApplicationContext_1(global::System.IntPtr evt);
  public delegate bool SwigDelegateApplicationContext_2(global::System.IntPtr evt);
  public delegate void SwigDelegateApplicationContext_3(global::System.IntPtr rw);
  public delegate void SwigDelegateApplicationContext_4(global::System.IntPtr rw);
  public delegate bool SwigDelegateApplicationContext_5(global::System.IntPtr rw);
  public delegate void SwigDelegateApplicationContext_6(global::System.IntPtr rw);
  public delegate void SwigDelegateApplicationContext_7(global::System.IntPtr rw);
  public delegate void SwigDelegateApplicationContext_8();
  public delegate void SwigDelegateApplicationContext_9();
  public delegate bool SwigDelegateApplicationContext_10();
  public delegate void SwigDelegateApplicationContext_11(global::System.IntPtr win, bool grab);
  public delegate void SwigDelegateApplicationContext_12(global::System.IntPtr win);
  public delegate void SwigDelegateApplicationContext_13();
  public delegate void SwigDelegateApplicationContext_14();
  public delegate void SwigDelegateApplicationContext_15(string renderer, global::System.IntPtr options);
  public delegate void SwigDelegateApplicationContext_16();
  public delegate void SwigDelegateApplicationContext_17();
  public delegate void SwigDelegateApplicationContext_18(global::System.IntPtr win, global::System.IntPtr lis);
  public delegate void SwigDelegateApplicationContext_19(global::System.IntPtr win, global::System.IntPtr lis);
  public delegate global::System.IntPtr SwigDelegateApplicationContext_20(string name, uint w, uint h, global::System.IntPtr miscParams);
  public delegate global::System.IntPtr SwigDelegateApplicationContext_21(string name, uint w, uint h);
  public delegate global::System.IntPtr SwigDelegateApplicationContext_22(string name, uint w);
  public delegate global::System.IntPtr SwigDelegateApplicationContext_23(string name);

  private SwigDelegateApplicationContext_0 swigDelegate0;
  private SwigDelegateApplicationContext_1 swigDelegate1;
  private SwigDelegateApplicationContext_2 swigDelegate2;
  private SwigDelegateApplicationContext_3 swigDelegate3;
  private SwigDelegateApplicationContext_4 swigDelegate4;
  private SwigDelegateApplicationContext_5 swigDelegate5;
  private SwigDelegateApplicationContext_6 swigDelegate6;
  private SwigDelegateApplicationContext_7 swigDelegate7;
  private SwigDelegateApplicationContext_8 swigDelegate8;
  private SwigDelegateApplicationContext_9 swigDelegate9;
  private SwigDelegateApplicationContext_10 swigDelegate10;
  private SwigDelegateApplicationContext_11 swigDelegate11;
  private SwigDelegateApplicationContext_12 swigDelegate12;
  private SwigDelegateApplicationContext_13 swigDelegate13;
  private SwigDelegateApplicationContext_14 swigDelegate14;
  private SwigDelegateApplicationContext_15 swigDelegate15;
  private SwigDelegateApplicationContext_16 swigDelegate16;
  private SwigDelegateApplicationContext_17 swigDelegate17;
  private SwigDelegateApplicationContext_18 swigDelegate18;
  private SwigDelegateApplicationContext_19 swigDelegate19;
  private SwigDelegateApplicationContext_20 swigDelegate20;
  private SwigDelegateApplicationContext_21 swigDelegate21;
  private SwigDelegateApplicationContext_22 swigDelegate22;
  private SwigDelegateApplicationContext_23 swigDelegate23;

  private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] { typeof(FrameEvent) };
  private static global::System.Type[] swigMethodTypes1 = new global::System.Type[] { typeof(FrameEvent) };
  private static global::System.Type[] swigMethodTypes2 = new global::System.Type[] { typeof(FrameEvent) };
  private static global::System.Type[] swigMethodTypes3 = new global::System.Type[] { typeof(RenderWindow) };
  private static global::System.Type[] swigMethodTypes4 = new global::System.Type[] { typeof(RenderWindow) };
  private static global::System.Type[] swigMethodTypes5 = new global::System.Type[] { typeof(RenderWindow) };
  private static global::System.Type[] swigMethodTypes6 = new global::System.Type[] { typeof(RenderWindow) };
  private static global::System.Type[] swigMethodTypes7 = new global::System.Type[] { typeof(RenderWindow) };
  private static global::System.Type[] swigMethodTypes8 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes9 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes10 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes11 = new global::System.Type[] { typeof(SWIGTYPE_p_SDL_Window), typeof(bool) };
  private static global::System.Type[] swigMethodTypes12 = new global::System.Type[] { typeof(SWIGTYPE_p_SDL_Window) };
  private static global::System.Type[] swigMethodTypes13 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes14 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes15 = new global::System.Type[] { typeof(string), typeof(NameValuePairList) };
  private static global::System.Type[] swigMethodTypes16 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes17 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes18 = new global::System.Type[] { typeof(SWIGTYPE_p_SDL_Window), typeof(InputListener) };
  private static global::System.Type[] swigMethodTypes19 = new global::System.Type[] { typeof(SWIGTYPE_p_SDL_Window), typeof(InputListener) };
  private static global::System.Type[] swigMethodTypes20 = new global::System.Type[] { typeof(string), typeof(uint), typeof(uint), typeof(NameValuePairList) };
  private static global::System.Type[] swigMethodTypes21 = new global::System.Type[] { typeof(string), typeof(uint), typeof(uint) };
  private static global::System.Type[] swigMethodTypes22 = new global::System.Type[] { typeof(string), typeof(uint) };
  private static global::System.Type[] swigMethodTypes23 = new global::System.Type[] { typeof(string) };
}

}
