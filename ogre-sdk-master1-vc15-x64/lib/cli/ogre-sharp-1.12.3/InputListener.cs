//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace org.ogre {

public class InputListener : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal InputListener(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(InputListener obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~InputListener() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BitesPINVOKE.delete_InputListener(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual void frameRendered(FrameEvent evt) {
    if (SwigDerivedClassHasMethod("frameRendered", swigMethodTypes0)) BitesPINVOKE.InputListener_frameRenderedSwigExplicitInputListener(swigCPtr, FrameEvent.getCPtr(evt)); else BitesPINVOKE.InputListener_frameRendered(swigCPtr, FrameEvent.getCPtr(evt));
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual bool keyPressed(KeyboardEvent evt) {
    bool ret = (SwigDerivedClassHasMethod("keyPressed", swigMethodTypes1) ? BitesPINVOKE.InputListener_keyPressedSwigExplicitInputListener(swigCPtr, KeyboardEvent.getCPtr(evt)) : BitesPINVOKE.InputListener_keyPressed(swigCPtr, KeyboardEvent.getCPtr(evt)));
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool keyReleased(KeyboardEvent evt) {
    bool ret = (SwigDerivedClassHasMethod("keyReleased", swigMethodTypes2) ? BitesPINVOKE.InputListener_keyReleasedSwigExplicitInputListener(swigCPtr, KeyboardEvent.getCPtr(evt)) : BitesPINVOKE.InputListener_keyReleased(swigCPtr, KeyboardEvent.getCPtr(evt)));
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool touchMoved(TouchFingerEvent evt) {
    bool ret = (SwigDerivedClassHasMethod("touchMoved", swigMethodTypes3) ? BitesPINVOKE.InputListener_touchMovedSwigExplicitInputListener(swigCPtr, TouchFingerEvent.getCPtr(evt)) : BitesPINVOKE.InputListener_touchMoved(swigCPtr, TouchFingerEvent.getCPtr(evt)));
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool touchPressed(TouchFingerEvent evt) {
    bool ret = (SwigDerivedClassHasMethod("touchPressed", swigMethodTypes4) ? BitesPINVOKE.InputListener_touchPressedSwigExplicitInputListener(swigCPtr, TouchFingerEvent.getCPtr(evt)) : BitesPINVOKE.InputListener_touchPressed(swigCPtr, TouchFingerEvent.getCPtr(evt)));
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool touchReleased(TouchFingerEvent evt) {
    bool ret = (SwigDerivedClassHasMethod("touchReleased", swigMethodTypes5) ? BitesPINVOKE.InputListener_touchReleasedSwigExplicitInputListener(swigCPtr, TouchFingerEvent.getCPtr(evt)) : BitesPINVOKE.InputListener_touchReleased(swigCPtr, TouchFingerEvent.getCPtr(evt)));
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool mouseMoved(MouseMotionEvent evt) {
    bool ret = (SwigDerivedClassHasMethod("mouseMoved", swigMethodTypes6) ? BitesPINVOKE.InputListener_mouseMovedSwigExplicitInputListener(swigCPtr, MouseMotionEvent.getCPtr(evt)) : BitesPINVOKE.InputListener_mouseMoved(swigCPtr, MouseMotionEvent.getCPtr(evt)));
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool mouseWheelRolled(MouseWheelEvent evt) {
    bool ret = (SwigDerivedClassHasMethod("mouseWheelRolled", swigMethodTypes7) ? BitesPINVOKE.InputListener_mouseWheelRolledSwigExplicitInputListener(swigCPtr, MouseWheelEvent.getCPtr(evt)) : BitesPINVOKE.InputListener_mouseWheelRolled(swigCPtr, MouseWheelEvent.getCPtr(evt)));
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool mousePressed(MouseButtonEvent evt) {
    bool ret = (SwigDerivedClassHasMethod("mousePressed", swigMethodTypes8) ? BitesPINVOKE.InputListener_mousePressedSwigExplicitInputListener(swigCPtr, MouseButtonEvent.getCPtr(evt)) : BitesPINVOKE.InputListener_mousePressed(swigCPtr, MouseButtonEvent.getCPtr(evt)));
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool mouseReleased(MouseButtonEvent evt) {
    bool ret = (SwigDerivedClassHasMethod("mouseReleased", swigMethodTypes9) ? BitesPINVOKE.InputListener_mouseReleasedSwigExplicitInputListener(swigCPtr, MouseButtonEvent.getCPtr(evt)) : BitesPINVOKE.InputListener_mouseReleased(swigCPtr, MouseButtonEvent.getCPtr(evt)));
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public InputListener() : this(BitesPINVOKE.new_InputListener(), true) {
    if (BitesPINVOKE.SWIGPendingException.Pending) throw BitesPINVOKE.SWIGPendingException.Retrieve();
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("frameRendered", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateInputListener_0(SwigDirectorframeRendered);
    if (SwigDerivedClassHasMethod("keyPressed", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateInputListener_1(SwigDirectorkeyPressed);
    if (SwigDerivedClassHasMethod("keyReleased", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateInputListener_2(SwigDirectorkeyReleased);
    if (SwigDerivedClassHasMethod("touchMoved", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateInputListener_3(SwigDirectortouchMoved);
    if (SwigDerivedClassHasMethod("touchPressed", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateInputListener_4(SwigDirectortouchPressed);
    if (SwigDerivedClassHasMethod("touchReleased", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateInputListener_5(SwigDirectortouchReleased);
    if (SwigDerivedClassHasMethod("mouseMoved", swigMethodTypes6))
      swigDelegate6 = new SwigDelegateInputListener_6(SwigDirectormouseMoved);
    if (SwigDerivedClassHasMethod("mouseWheelRolled", swigMethodTypes7))
      swigDelegate7 = new SwigDelegateInputListener_7(SwigDirectormouseWheelRolled);
    if (SwigDerivedClassHasMethod("mousePressed", swigMethodTypes8))
      swigDelegate8 = new SwigDelegateInputListener_8(SwigDirectormousePressed);
    if (SwigDerivedClassHasMethod("mouseReleased", swigMethodTypes9))
      swigDelegate9 = new SwigDelegateInputListener_9(SwigDirectormouseReleased);
    BitesPINVOKE.InputListener_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7, swigDelegate8, swigDelegate9);
  }

  private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
    global::System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(InputListener));
    return hasDerivedMethod;
  }

  private void SwigDirectorframeRendered(global::System.IntPtr evt) {
    frameRendered(new FrameEvent(evt, false));
  }

  private bool SwigDirectorkeyPressed(global::System.IntPtr evt) {
    return keyPressed(new KeyboardEvent(evt, false));
  }

  private bool SwigDirectorkeyReleased(global::System.IntPtr evt) {
    return keyReleased(new KeyboardEvent(evt, false));
  }

  private bool SwigDirectortouchMoved(global::System.IntPtr evt) {
    return touchMoved(new TouchFingerEvent(evt, false));
  }

  private bool SwigDirectortouchPressed(global::System.IntPtr evt) {
    return touchPressed(new TouchFingerEvent(evt, false));
  }

  private bool SwigDirectortouchReleased(global::System.IntPtr evt) {
    return touchReleased(new TouchFingerEvent(evt, false));
  }

  private bool SwigDirectormouseMoved(global::System.IntPtr evt) {
    return mouseMoved(new MouseMotionEvent(evt, false));
  }

  private bool SwigDirectormouseWheelRolled(global::System.IntPtr evt) {
    return mouseWheelRolled(new MouseWheelEvent(evt, false));
  }

  private bool SwigDirectormousePressed(global::System.IntPtr evt) {
    return mousePressed(new MouseButtonEvent(evt, false));
  }

  private bool SwigDirectormouseReleased(global::System.IntPtr evt) {
    return mouseReleased(new MouseButtonEvent(evt, false));
  }

  public delegate void SwigDelegateInputListener_0(global::System.IntPtr evt);
  public delegate bool SwigDelegateInputListener_1(global::System.IntPtr evt);
  public delegate bool SwigDelegateInputListener_2(global::System.IntPtr evt);
  public delegate bool SwigDelegateInputListener_3(global::System.IntPtr evt);
  public delegate bool SwigDelegateInputListener_4(global::System.IntPtr evt);
  public delegate bool SwigDelegateInputListener_5(global::System.IntPtr evt);
  public delegate bool SwigDelegateInputListener_6(global::System.IntPtr evt);
  public delegate bool SwigDelegateInputListener_7(global::System.IntPtr evt);
  public delegate bool SwigDelegateInputListener_8(global::System.IntPtr evt);
  public delegate bool SwigDelegateInputListener_9(global::System.IntPtr evt);

  private SwigDelegateInputListener_0 swigDelegate0;
  private SwigDelegateInputListener_1 swigDelegate1;
  private SwigDelegateInputListener_2 swigDelegate2;
  private SwigDelegateInputListener_3 swigDelegate3;
  private SwigDelegateInputListener_4 swigDelegate4;
  private SwigDelegateInputListener_5 swigDelegate5;
  private SwigDelegateInputListener_6 swigDelegate6;
  private SwigDelegateInputListener_7 swigDelegate7;
  private SwigDelegateInputListener_8 swigDelegate8;
  private SwigDelegateInputListener_9 swigDelegate9;

  private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] { typeof(FrameEvent) };
  private static global::System.Type[] swigMethodTypes1 = new global::System.Type[] { typeof(KeyboardEvent) };
  private static global::System.Type[] swigMethodTypes2 = new global::System.Type[] { typeof(KeyboardEvent) };
  private static global::System.Type[] swigMethodTypes3 = new global::System.Type[] { typeof(TouchFingerEvent) };
  private static global::System.Type[] swigMethodTypes4 = new global::System.Type[] { typeof(TouchFingerEvent) };
  private static global::System.Type[] swigMethodTypes5 = new global::System.Type[] { typeof(TouchFingerEvent) };
  private static global::System.Type[] swigMethodTypes6 = new global::System.Type[] { typeof(MouseMotionEvent) };
  private static global::System.Type[] swigMethodTypes7 = new global::System.Type[] { typeof(MouseWheelEvent) };
  private static global::System.Type[] swigMethodTypes8 = new global::System.Type[] { typeof(MouseButtonEvent) };
  private static global::System.Type[] swigMethodTypes9 = new global::System.Type[] { typeof(MouseButtonEvent) };
}

}
