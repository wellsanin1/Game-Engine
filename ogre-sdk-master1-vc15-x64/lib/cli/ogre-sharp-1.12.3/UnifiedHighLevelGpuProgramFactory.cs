//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace org.ogre {

public class UnifiedHighLevelGpuProgramFactory : HighLevelGpuProgramFactory {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal UnifiedHighLevelGpuProgramFactory(global::System.IntPtr cPtr, bool cMemoryOwn) : base(OgrePINVOKE.UnifiedHighLevelGpuProgramFactory_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(UnifiedHighLevelGpuProgramFactory obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~UnifiedHighLevelGpuProgramFactory() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OgrePINVOKE.delete_UnifiedHighLevelGpuProgramFactory(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public UnifiedHighLevelGpuProgramFactory() : this(OgrePINVOKE.new_UnifiedHighLevelGpuProgramFactory(), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public override string getLanguage() {
    string ret = OgrePINVOKE.UnifiedHighLevelGpuProgramFactory_getLanguage(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override HighLevelGpuProgram create(ResourceManager creator, string name, ulong handle, string group, bool isManual, ManualResourceLoader loader) {
    global::System.IntPtr cPtr = OgrePINVOKE.UnifiedHighLevelGpuProgramFactory_create(swigCPtr, ResourceManager.getCPtr(creator), name, handle, group, isManual, ManualResourceLoader.getCPtr(loader));
    HighLevelGpuProgram ret = (cPtr == global::System.IntPtr.Zero) ? null : new HighLevelGpuProgram(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override void destroy(HighLevelGpuProgram prog) {
    OgrePINVOKE.UnifiedHighLevelGpuProgramFactory_destroy(swigCPtr, HighLevelGpuProgram.getCPtr(prog));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

}

}
