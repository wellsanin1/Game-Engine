//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace org.ogre {

public class NumericKeyFrame : KeyFrame {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal NumericKeyFrame(global::System.IntPtr cPtr, bool cMemoryOwn) : base(OgrePINVOKE.NumericKeyFrame_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NumericKeyFrame obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NumericKeyFrame() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OgrePINVOKE.delete_NumericKeyFrame(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public NumericKeyFrame(AnimationTrack parent, float time) : this(OgrePINVOKE.new_NumericKeyFrame(AnimationTrack.getCPtr(parent), time), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual AnyNumeric getValue() {
    AnyNumeric ret = new AnyNumeric(OgrePINVOKE.NumericKeyFrame_getValue(swigCPtr), false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual void setValue(AnyNumeric val) {
    OgrePINVOKE.NumericKeyFrame_setValue(swigCPtr, AnyNumeric.getCPtr(val));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public override KeyFrame _clone(AnimationTrack newParent) {
    global::System.IntPtr cPtr = OgrePINVOKE.NumericKeyFrame__clone(swigCPtr, AnimationTrack.getCPtr(newParent));
    KeyFrame ret = (cPtr == global::System.IntPtr.Zero) ? null : new KeyFrame(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
