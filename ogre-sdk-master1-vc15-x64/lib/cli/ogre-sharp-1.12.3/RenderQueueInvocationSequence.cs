//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace org.ogre {

public class RenderQueueInvocationSequence : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal RenderQueueInvocationSequence(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(RenderQueueInvocationSequence obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~RenderQueueInvocationSequence() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OgrePINVOKE.delete_RenderQueueInvocationSequence(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public RenderQueueInvocationSequence(string name) : this(OgrePINVOKE.new_RenderQueueInvocationSequence(name), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public string getName() {
    string ret = OgrePINVOKE.RenderQueueInvocationSequence_getName(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public RenderQueueInvocation add(byte renderQueueGroupID, string invocationName) {
    global::System.IntPtr cPtr = OgrePINVOKE.RenderQueueInvocationSequence_add__SWIG_0(swigCPtr, renderQueueGroupID, invocationName);
    RenderQueueInvocation ret = (cPtr == global::System.IntPtr.Zero) ? null : new RenderQueueInvocation(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void add(RenderQueueInvocation i) {
    OgrePINVOKE.RenderQueueInvocationSequence_add__SWIG_1(swigCPtr, RenderQueueInvocation.getCPtr(i));
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public uint size() {
    uint ret = OgrePINVOKE.RenderQueueInvocationSequence_size(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void clear() {
    OgrePINVOKE.RenderQueueInvocationSequence_clear(swigCPtr);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public RenderQueueInvocation get(uint index) {
    global::System.IntPtr cPtr = OgrePINVOKE.RenderQueueInvocationSequence_get(swigCPtr, index);
    RenderQueueInvocation ret = (cPtr == global::System.IntPtr.Zero) ? null : new RenderQueueInvocation(cPtr, false);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void remove(uint index) {
    OgrePINVOKE.RenderQueueInvocationSequence_remove(swigCPtr, index);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_Ogre__VectorIteratorT_std__vectorT_Ogre__RenderQueueInvocation_p_t_t iterator() {
    SWIGTYPE_p_Ogre__VectorIteratorT_std__vectorT_Ogre__RenderQueueInvocation_p_t_t ret = new SWIGTYPE_p_Ogre__VectorIteratorT_std__vectorT_Ogre__RenderQueueInvocation_p_t_t(OgrePINVOKE.RenderQueueInvocationSequence_iterator(swigCPtr), true);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
