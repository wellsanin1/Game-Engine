//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace org.ogre {

public class WaveformControllerFunction : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal WaveformControllerFunction(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(WaveformControllerFunction obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~WaveformControllerFunction() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OgrePINVOKE.delete_WaveformControllerFunction(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public WaveformControllerFunction(WaveformType wType, float arg1, float frequency, float phase, float amplitude, bool deltaInput, float dutyCycle) : this(OgrePINVOKE.new_WaveformControllerFunction__SWIG_0((int)wType, arg1, frequency, phase, amplitude, deltaInput, dutyCycle), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public WaveformControllerFunction(WaveformType wType, float arg1, float frequency, float phase, float amplitude, bool deltaInput) : this(OgrePINVOKE.new_WaveformControllerFunction__SWIG_1((int)wType, arg1, frequency, phase, amplitude, deltaInput), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public WaveformControllerFunction(WaveformType wType, float arg1, float frequency, float phase, float amplitude) : this(OgrePINVOKE.new_WaveformControllerFunction__SWIG_2((int)wType, arg1, frequency, phase, amplitude), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public WaveformControllerFunction(WaveformType wType, float arg1, float frequency, float phase) : this(OgrePINVOKE.new_WaveformControllerFunction__SWIG_3((int)wType, arg1, frequency, phase), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public WaveformControllerFunction(WaveformType wType, float arg1, float frequency) : this(OgrePINVOKE.new_WaveformControllerFunction__SWIG_4((int)wType, arg1, frequency), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public WaveformControllerFunction(WaveformType wType, float arg1) : this(OgrePINVOKE.new_WaveformControllerFunction__SWIG_5((int)wType, arg1), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public WaveformControllerFunction(WaveformType wType) : this(OgrePINVOKE.new_WaveformControllerFunction__SWIG_6((int)wType), true) {
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
  }

  public static ControllerFunctionPtr create(WaveformType wType, float arg1, float frequency, float phase, float amplitude, bool deltaInput, float dutyCycle) {
    ControllerFunctionPtr ret = new ControllerFunctionPtr(OgrePINVOKE.WaveformControllerFunction_create__SWIG_0((int)wType, arg1, frequency, phase, amplitude, deltaInput, dutyCycle), true);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static ControllerFunctionPtr create(WaveformType wType, float arg1, float frequency, float phase, float amplitude, bool deltaInput) {
    ControllerFunctionPtr ret = new ControllerFunctionPtr(OgrePINVOKE.WaveformControllerFunction_create__SWIG_1((int)wType, arg1, frequency, phase, amplitude, deltaInput), true);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static ControllerFunctionPtr create(WaveformType wType, float arg1, float frequency, float phase, float amplitude) {
    ControllerFunctionPtr ret = new ControllerFunctionPtr(OgrePINVOKE.WaveformControllerFunction_create__SWIG_2((int)wType, arg1, frequency, phase, amplitude), true);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static ControllerFunctionPtr create(WaveformType wType, float arg1, float frequency, float phase) {
    ControllerFunctionPtr ret = new ControllerFunctionPtr(OgrePINVOKE.WaveformControllerFunction_create__SWIG_3((int)wType, arg1, frequency, phase), true);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static ControllerFunctionPtr create(WaveformType wType, float arg1, float frequency) {
    ControllerFunctionPtr ret = new ControllerFunctionPtr(OgrePINVOKE.WaveformControllerFunction_create__SWIG_4((int)wType, arg1, frequency), true);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static ControllerFunctionPtr create(WaveformType wType, float arg1) {
    ControllerFunctionPtr ret = new ControllerFunctionPtr(OgrePINVOKE.WaveformControllerFunction_create__SWIG_5((int)wType, arg1), true);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static ControllerFunctionPtr create(WaveformType wType) {
    ControllerFunctionPtr ret = new ControllerFunctionPtr(OgrePINVOKE.WaveformControllerFunction_create__SWIG_6((int)wType), true);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public float calculate(float source) {
    float ret = OgrePINVOKE.WaveformControllerFunction_calculate(swigCPtr, source);
    if (OgrePINVOKE.SWIGPendingException.Pending) throw OgrePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
